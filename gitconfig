[push]
  default = current
[pull]
  rebase = true
[alias]
  aa = add --all
  ap = add --patch
  ca = commit --amend
  amend = commit -a --amend --no-edit
  ci = commit -v
  cia   = commit -v -a
  ciam  = commit -v -a -m
  cim   = commit -v -m
  co = checkout
  cob = checkout -b
  br = branch
  create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git branch -D $1' -
  merge-branch = !git checkout master && git merge @{-1}
  pr = !hub pull-request
  st = status
  s = status -sb
  stat = status
  pu = push
  pf = push --force-with-lease
  pl = pull
  pr = pull-request
  gap = add -p
  pub = "!f() { git push -u ${1:-origin} `git symbolic-ref HEAD`; }; f"
  l = log --graph --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset'
  ll = log --stat --abbrev-commit
  d = diff
  su = "!f() { git submodule sync; git submodule update --init; }; f"
  graph = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  up = !git fetch origin && git rebase origin/master
[credential]
  helper = osxkeychain
[rerere]
  enabled = 1
[color]
  # Use colors in Git commands that are capable of colored output when outputting to the terminal
  ui     = auto
  diff   = auto
  status = auto
  branch = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[core]
  excludesfile = ~/.gitignore
  autocrlf     = input
  editor       = vim
[fetch]
  prune = true
[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path =
[apply]
  whitespace = nowarn
[apply]
  whitespace = nowarn
[mergetool]
  keepBackup = false
[difftool]
  prompt = false
[help]
  autocorrect = 1
[grep]
  linenumber = true

# NEEDS TO BE LAST LINE IN THIS FILE
[include]
  path = .gitconfig.local
